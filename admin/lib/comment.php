<?phpsession_start();require 'Parsemix.php';require_once 'Model.php';require_once 'Support.php';$model = new Model();if(isset($_POST['idpost'])&& isset($_POST['iduser']) && isset($_POST['textComment'])) {    if(hash_equals($_POST['token'], $_SESSION['token'])){    if($_POST['type_post'] == 'news'){        $model->addCommentForNews($_POST['idpost'], $_POST['iduser'], $_POST['textComment'], time());        if($_SESSION['status'] != 0){        $comment = $model->getCommentOneForNews($_POST['idpost']);        }else{            $comment = $model->getCommentOneNews($_POST['idpost']);        }    }else{    $model->addComment($_POST['idpost'], $_POST['iduser'], $_POST['textComment'], time());    if($_SESSION['status'] != 0){        $comment = $model->getCommentOneVip($_POST['idpost']);    }else{        $comment = $model->getCommentOne($_POST['idpost']);    }    }    $comment['date'] = date('d.m.Y H:i:s', Support::getWatch($comment['date']));    echo json_encode($comment);    }}if(isset($_POST['post'])&& isset($_POST['user']) && isset($_POST['like_type'])){    $countVotedUser = $model->proVotedUser($_POST['post'], $_POST['user']);    if($countVotedUser['COUNT(*)'] > 0){        $request = ['re' => 'Вы уже проголосовали!', 'id' => 0];        echo json_encode($request);    }else {        $model->addRating($_POST['post'], $_POST['user'], $_POST['like_type']);        $request = ['re' => 1, 'id' => 1];        echo json_encode($request);    }}if(isset($_POST['ratingPost']) && isset($_POST['id_rating'])){    $model->updateRating($_POST['id_rating'], $_POST['ratingPost']);}// исправление ссылокif(isset($_POST['mix_title0'])) {    for ($i = 0; $i < $_POST['inputСount']; $i++) {        if (!empty($_POST['rly_path'.$i])) {            $model->saveChangeSrc($_POST['id'.$i], changeSrc($_POST['rly_path'.$i]));        }    }    echo 'Готово';}if(isset($_POST['sliderTv']) && isset($_POST['sliderTitle']) && isset($_POST['sliderImg'])){    $id_post = $model->getIdPostForSlider($_POST['sliderTitle'], $_POST['sliderTv']);    if(!empty($id_post['id'])){        $model->addPostForSlider($id_post['id'],$_POST['sliderImg']);        echo 'Готово!';    }else{        echo 'Данные не найдены на базе';    }}if(isset($_POST['idSlider'])){    $model->deleteSlider($_POST['idSlider']);}if(isset($_POST{'editSliderTitle'}) && isset($_POST{'editSliderTv'}) && isset($_POST{'editSliderImg'}) && isset($_POST['id_slider'])){    $id_post = $model->getIdPostForSlider($_POST['editSliderTitle'], $_POST['editSliderTv']);    if(!empty($id_post['id'])){        $model->updateSlider($id_post['id'],$_POST['editSliderImg'], $_POST['id_slider']);        echo 'Готово!';    }else{        echo 'Данные не найдены на базе';    }}    //Стол заказов    //Добавление заказаif(isset($_POST['zTitle']) && isset($_POST['zDescription']) && isset($_POST['zId'])){    $date = $model->getDateZakaz($_POST['zId']);    $time = $date['date'];    $date = time() - $date['date'];    if($_SESSION['status'] != 0){        $model->addZakaz($_POST['zId'], $_POST['zTitle'], $_POST['zDescription'], time());        $zakaz = $model->getZakazOne();        echo json_encode($zakaz);    }else {    if( $date >= 86400 * 30){        $model->addZakaz($_POST['zId'], $_POST['zTitle'], $_POST['zDescription'], time());        $zakaz = $model->getZakazOne();        echo json_encode($zakaz);    }else{         $time = date('d.m.Y H:i:s', Support::getWatch($time));        $otvet = [            'status' => '1',            'date' => "$time"        ];        echo json_encode($otvet);    }    }}    //Обновление заказаif(isset($_POST['updateZakaz']) && isset($_POST['idZakaz'])){    $model->updateZakaz($_POST['idZakaz'], $_POST['updateZakaz']);    $time = time();    $model->addUved($_POST['updateZakaz'],$_POST['ssilkaZ'],$time);    $id_uved = $model->getUvedId($time,$_POST['updateZakaz'], $_POST['ssilkaZ']);    $model->addIdUserAndIdUved($_POST['id_userZ'], $id_uved['id']);    print_r($id_uved);}    //Голосif(isset($_POST['golos'])&& isset($_POST['user_id'])){    if($_POST['user_id'] == 0){        return false;    }else{   $count = $model->getCountGolosUser($_POST['user_id'], $_POST['golos']);   if($count['COUNT(*)'] >= 1){       return false;   }else{       $model->addGolos($_POST['user_id'], $_POST['golos']);       $golos =  $model->getGolos($_POST['golos']);       $go = ['count' => $golos['COUNT(*)']];       echo json_encode($go) ;   }    }}// Профиль// Обычные юзеры редактор профиляif(isset($_POST['id_user']) && isset($_POST['pol']) && isset($_POST['age']) && isset($_POST['userName']) && isset($_POST['city'])){    $model->editProfileUser($_POST['age'], $_POST['pol'],$_POST['userName'], $_POST['city'],$_POST['id_user']);}//Редактор аватараif(isset($_POST['avatar'])){    echo 'great';    $model->updateAva($_POST['avatarId'],$_POST['avatar']);}// Vip юзеры редактор профиляif(isset($_POST['login_color']) && isset($_POST['fon']) && isset($_POST['checked']) && isset($_POST['vip_user']) && isset($_POST['font'])){    $user = $model->findAllUserVipWhithIp($_POST['vip_user']);    if(!empty($user)){        $model->addVipSettingUser($_POST['login_color'], $_POST['fon'],$_POST['checked'],$_POST['vip_status'], $_POST['vip_user'], $_POST['font']);    }else{        $model->onVipAllSettingForUser($_POST['vip_user'], $_POST['login_color'], $_POST['fon'], $_POST['checked'],$_POST['vip_status'], $_POST['font']);    }    echo 'Сохранено';}//Просмот уведомленийif(isset($_POST['id_vip_user']) && isset($_POST['id_uved'] )  ){    $model->updateUvedView($_POST['id_uved'],$_POST['id_vip_user']);    $count = $model->getCountUved($_POST['id_vip_user']);    echo $count['COUNT(*)'];}// Випкаif(isset($_POST['loginUser'])){    $user = $model->findUserWithLogin($_POST['loginUser']);    if(empty($user)){       echo 'Пользователь с таким логином не существует!';    }else{        $model->addVipForUser($_POST['loginUser']);        $provekra = $model->userBilVip($user['id']);        if(empty($provekra)){            $model->onVipSettingForUser($user['id']);        }        $model->startVipTime(time(),$user['id']);           echo 'Успешно!';    }}// Добавление аниме в избранноеif(isset($_POST['id_post_fav']) && isset($_POST['id_user_fav'])){    $count = $model->countFavorites($_POST['id_post_fav'], $_POST['id_user_fav']);    if($count['COUNT(*)'] > 0){        $model->deleteFavorite($_POST['id_post_fav'], $_POST['id_user_fav']);        echo '0';    }else{        $model->insertFavorite($_POST['id_post_fav'], $_POST['id_user_fav']);        echo '1';    }}//Отправление уведомленийif (isset($_POST['getCountUved'])){    $count  =  $model->getCountUved($_SESSION['id']);    echo $count['COUNT(*)'];}if (isset($_POST['autoPlay'])){   $model->autoPlayChange($_POST['autoPlay'], $_SESSION['id']);}?>